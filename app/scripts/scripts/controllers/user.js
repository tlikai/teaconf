// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'controllers/base/controller', 'models/user', 'models/notifications', 'views/user/home', 'views/user/settings', 'views/user/notifications'], function(Chaplin, Controller, User, Notifications, UserHomeView, UserSettingsView, UserNotificationsView) {
  'use strict';
  var UserController, _ref;
  return UserController = (function(_super) {
    __extends(UserController, _super);

    function UserController() {
      _ref = UserController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    UserController.prototype.loginRequire = function() {
      return Chaplin.mediator.user || Chaplin.mediator.publish('!router:routeByName', 'login');
    };

    UserController.prototype.home = function(params) {
      var _this = this;
      this.model = new User({
        id: params.id
      });
      this.view = new UserHomeView({
        model: this.model
      });
      return this.model.fetch({
        success: function() {
          if (params.topic != null) {
            require(['models/topics', 'views/user/home/topic'], function(Topics, HomeTopicView) {
              _this.collection = new Topics({
                user: _this.model
              });
              _this.view.subView = new HomeTopicView({
                collection: _this.collection,
                region: 'home-list-region'
              });
              return _this.collection.fetch();
            });
          }
          if (params.post != null) {
            return require(['models/posts', 'views/user/home/post'], function(Posts, HomePostView) {
              _this.collection = new Posts({
                user: _this.model
              });
              _this.view.subView = new HomePostView({
                collection: _this.collection,
                region: 'home-list-region'
              });
              return _this.collection.fetch({
                success: function(resp) {
                  return console.debug(respkj);
                }
              });
            });
          }
        }
      });
    };

    UserController.prototype.settings = function() {
      this.loginRequire();
      this.model = new User({
        id: Chaplin.mediator.user.id
      });
      this.view = new UserSettingsView({
        model: this.model
      });
      return this.model.fetch();
    };

    UserController.prototype.notifications = function(params) {
      var _this = this;
      this.loginRequire();
      this.collection = new Notifications;
      this.view = new UserNotificationsView({
        collection: this.collection,
        unread: params.unread
      });
      return this.collection.fetch({
        data: {
          unread: params.unread ? 1 : 0
        },
        success: function() {
          return _this.view.setActive();
        }
      });
    };

    return UserController;

  })(Controller);
});
