// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/page-view', 'text!views/templates/user/settings.html'], function(PageView, template) {
  'use strict';
  var UserSettingsView, _ref;

  return UserSettingsView = (function(_super) {
    __extends(UserSettingsView, _super);

    function UserSettingsView() {
      _ref = UserSettingsView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    UserSettingsView.prototype.template = template;

    UserSettingsView.prototype.events = {
      'click .sidenav a': function(e) {
        var viewName;

        viewName = $(e.currentTarget).attr('href').substring(1);
        return this.setSubView(viewName);
      }
    };

    UserSettingsView.prototype.setSubView = function(viewName) {
      var _ref1,
        _this = this;

      if (viewName === this.currentSubView) {
        return false;
      }
      this.currentSubView = viewName;
      if ((_ref1 = this.currentSubView) !== 'profile' && _ref1 !== 'avatar' && _ref1 !== 'password') {
        this.currentSubView = 'profile';
      }
      return require(['views/user/settings/' + this.currentSubView], function(SettingsView) {
        typeof _this.subview === 'object' && _this.subview.remove();
        _this.subview = new SettingsView({
          model: _this.model,
          container: _this.$('#page-area')
        });
        _this.$('.sidenav li').removeClass('active');
        return _this.$('.sidenav li.nav-' + _this.currentSubView).addClass('active');
      });
    };

    UserSettingsView.prototype.render = function() {
      var view;

      UserSettingsView.__super__.render.apply(this, arguments);
      view = window.location.hash.substring(1);
      return this.setSubView(view);
    };

    return UserSettingsView;

  })(PageView);
});
