// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['chaplin', 'views/base/collection-view', 'views/user/notifications/item', 'text!views/templates/user/notifications.html'], function(Chaplin, CollectionView, NotificationItemView, template) {
  'use strict';
  var UserNotificationsView;
  return UserNotificationsView = (function(_super) {
    __extends(UserNotificationsView, _super);

    function UserNotificationsView(options) {
      if (options.unread != null) {
        this.unread = options.unread;
      }
      UserNotificationsView.__super__.constructor.apply(this, arguments);
    }

    UserNotificationsView.prototype.events = {
      'click .all-read': function(e) {
        e.preventDefault();
        return $('.unread').each(function(i, o) {
          return $(o).trigger('click');
        });
      }
    };

    UserNotificationsView.prototype.template = template;

    UserNotificationsView.prototype.itemView = NotificationItemView;

    UserNotificationsView.prototype.listSelector = '.notifications';

    UserNotificationsView.prototype.render = function() {
      UserNotificationsView.__super__.render.apply(this, arguments);
      return this.setActive();
    };

    UserNotificationsView.prototype.setActive = function() {
      var className;
      className = this.unread ? 'unread' : 'all';
      return $(".nav-" + className).addClass('active');
    };

    UserNotificationsView.prototype.getTemplateData = function() {
      var data;
      data = UserNotificationsView.__super__.getTemplateData.apply(this, arguments);
      data.unread = this.unread;
      return data;
    };

    return UserNotificationsView;

  })(CollectionView);
});
