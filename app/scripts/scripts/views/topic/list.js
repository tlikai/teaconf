// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['views/base/collection-view', 'views/topic/item', 'text!views/templates/topic/list.html'], function(CollectionView, TopicItemView, template) {
  'use strict';
  var TopicListView, _ref;

  return TopicListView = (function(_super) {
    __extends(TopicListView, _super);

    function TopicListView() {
      _ref = TopicListView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    TopicListView.prototype.events = {
      'click .next': function(e) {
        console.debug(this.collection.state);
        console.debug(this.collection.hasNext());
        if (this.collection.hasNext()) {
          return this.collection.getNextPage({
            silent: false
          });
        }
      },
      'click .prev': function(e) {
        console.debug(this.collection);
        if (this.collection.hasPrevious()) {
          return this.collection.getPreviousPage({
            silent: false
          });
        }
      }
    };

    TopicListView.prototype.itemView = TopicItemView;

    TopicListView.prototype.listSelector = '.topic-list';

    TopicListView.prototype.template = template;

    TopicListView.prototype.render = function() {
      var _this = this;

      TopicListView.__super__.render.apply(this, arguments);
      return $(window).scroll(function() {
        if ($(window).height() + $(window).scrollTop() >= $(document.body).height()) {
          return _this.collection && _this.collection.nextPage();
        }
      });
    };

    TopicListView.prototype.setActiveTab = function(tab) {
      return this.$(".tabs li." + tab).addClass('active');
    };

    return TopicListView;

  })(CollectionView);
});
