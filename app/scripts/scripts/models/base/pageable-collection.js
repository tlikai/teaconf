// Generated by CoffeeScript 1.6.2
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['models/base/collection'], function(Collection) {
  'use strict';
  var PageableCollection;

  return PageableCollection = (function(_super) {
    __extends(PageableCollection, _super);

    function PageableCollection() {
      this.pagination.currentPage = 0;
      PageableCollection.__super__.constructor.apply(this, arguments);
    }

    PageableCollection.prototype.pagination = {
      pageSize: 15,
      totalPages: 0,
      totalItems: 0,
      currentPage: 0
    };

    PageableCollection.prototype.fetch = function(options) {
      var _ref;

      if (options == null) {
        options = {};
      }
      options.data = _.extend({
        page: this.pagination.currentPage,
        perpage: this.pagination.pageSize
      }, (_ref = options.data) != null ? _ref : {});
      return PageableCollection.__super__.fetch.call(this, options);
    };

    PageableCollection.prototype.parse = function(data) {
      this.pagination.totalItems = data.total;
      this.pagination.totalPages = Math.ceil(this.pagination.totalItems / this.pagination.pageSize);
      return data.data;
    };

    PageableCollection.prototype.prevPage = function() {
      if (this.pagination.currentPage <= 0) {
        return false;
      }
      this.pagination.currentPage--;
      return this.fetch({
        add: true,
        remove: false
      });
    };

    PageableCollection.prototype.nextPage = function() {
      if (this.pagination.currentPage >= this.pagination.totalPages) {
        return false;
      }
      this.pagination.currentPage++;
      return this.fetch({
        add: true,
        remove: false
      });
    };

    return PageableCollection;

  })(Collection);
});
