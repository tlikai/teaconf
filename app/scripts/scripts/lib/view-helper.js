// Generated by CoffeeScript 1.6.2
var __slice = [].slice;

define(['handlebars', 'chaplin', 'lib/utils'], function(Handlebars, Chaplin, utils) {
  'use strict';
  var mediator;

  mediator = Chaplin.mediator;
  Handlebars.registerHelper('if_logged_in', function(options) {
    if (mediator.user) {
      return options.fn(this);
    } else {
      return options.inverse(this);
    }
  });
  Handlebars.registerHelper('with', function(context, options) {
    if (!context || Handlebars.Utils.isEmpty(context)) {
      return options.inverse(this);
    } else {
      return options.fn(context);
    }
  });
  Handlebars.registerHelper('without', function(context, options) {
    var inverse;

    inverse = options.inverse;
    options.inverse = options.fn;
    options.fn = inverse;
    return Handlebars.helpers["with"].call(this, context, options);
  });
  Handlebars.registerHelper('with_user', function(options) {
    var context;

    context = mediator.user || {};
    return Handlebars.helpers["with"].call(this, context, options);
  });
  Handlebars.registerHelper('url', function() {
    var options, params, routeName, _i;

    routeName = arguments[0], params = 3 <= arguments.length ? __slice.call(arguments, 1, _i = arguments.length - 1) : (_i = 1, []), options = arguments[_i++];
    return Chaplin.helpers.reverse(routeName, params);
  });
  return null;
});
